# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: test-59

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: build-linux
        id: build-linux
        env: 
            testname: "3r455t5345"
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          ifconfig 
          pwd
          echo $testname
          sudo docker ps 
          # sudo docker run --rm --name test  --privileged=true -v /home/gitlab-runner/actions-runner/_work/test-action/test-action:/home  ubuntu:20.04 /bin/bash -c "cd /home && ls -l"
      - name: send-mail
        if: ${{ success() && steps.build-linux.conclusion == 'success' }}
        env: 
            email: "sixue.cheng@deepcomputing.io"
            url: ${{ steps.step_id}}
        run: |
          echo $email
          echo $url
          echo "Project Root: $GITHUB_WORKSPACE" 
          echo run identifier ${{ inputs.id }}
          echo ${{github.job]}
          echo "CI update code success ! https://github.com/DC-DeepComputing/test-action/actions" | mail -s "update code" $email
          
        
          
          
